var num1 =  '45564151521355455646552135547789965541200783826509256232898437367525257230352605098533986525257230352605098533986525257230352605098533986525257230352605098533986050985339865252572303526050985339865252572305098533986525257230352605098533986525257230352605098533986050985339865252572303526050985339865252572303526051',
    num2 =  '48779652482940532052525723035260509853398634895634785637563525257230352605098533986525257230352605098533986525257230352605098533986525257230352605098533986050985339865252572303526050985339865252572050985339865252572303526050985339865252572303526050985339860509853398652525723035260509853398652525723303526050';
// console.log(num1 + num2);

// ?? 大数相加 数字超过语言的计算范围
// 两数相加，从最后一位开始计算
// 在内存中表达，数字型Number Infinity -> 字符串String 最后一位，相加
function addToNumber(str1,str2) {
    var carry = 0, // 进位
        l1 = str1.length,
        l2 = str2.length,
        arr = [];
    var max = Math.max(l1, l2); // 不一样长
    for(var i = l1-1, j = l2-1, n = max-1; n >= 0; n--, i--, j--){
        // var sum = parseInt(str1[i]) + parseInt(str2[j]) + carry; // 每一次的相加和
        var sum = (+str1[i] || 0) + (+str2[j] || 0) + carry;
        // console.log(sum);
        // break;
        if(sum >= 10) {
            carry = 1;
            arr.push(sum - 10);
        }else {
            carry = 0;
            arr.push(sum);
        }
    }
    if(carry > 0) {
        arr.push(carry);
    }
    // 1.字符串从尾部到首部
    // 2.两个数的位数不一样
    return arr.reverse().join('');
}

console.log(addToNumber(num1,num2));